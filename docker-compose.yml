version: '3.8'
 
services:
  catalog-api:
    build:
      context: . 
    image: catalog-api:latest
    ports:
      - "5000:80"
    environment:
      - ConnectionStrings__MongoDB=mongodb://mongo:27017
      - MongoDatabaseName=ProductDb
      - ConnectionStrings__CollectionName=Products
      - ConnectionStrings__BrandsCollection=ProductBrands
      - ConnectionStrings__TypesCollection=ProductTypes
    depends_on:
      - mongo
    networks:
      - eshopping-external-network

  basket-api:
    build:
      context: .
    image: basket-api:latest
    ports:
      - "5001:80"
    environment:
      - CacheSettings__ConnectionString=redis:6379,password=Ali1234567,abortConnect=false
      - GrpcSettings__DiscountUrl=http://discount-api:5002
      - EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - redis
      - rabbitmq
    networks:
      - eshopping-external-network

  discount-api:
    build:
      context: .
    image: discount-api:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=Password@1;"          
    depends_on:
      - discountdb
    ports:
      - "5002:80"
    networks:
      - eshopping-external-network

  ordering-api:
    build:
      context: .
    image: ordering-api:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__DefaultConnection=Server=orderdb;Database=OrderDb;User Id=sa;Password=Ali1234567;TrustServerCertificate=true;"
      - EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672
    ports:
      - "5003:80"
    depends_on:
      - orderdb
      - rabbitmq
    networks:
      - eshopping-external-network
       
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
      - "8000:8000" # For the agent communication
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - eshopping-external-network

  mongo:
    image: mongo:5.0.3-focal
    environment:
      - MONGO_INITDB_DATABASE=ProductDb # No spaces around the equals sign
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    restart: always
    networks:
      - eshopping-external-network

  redis:
    image: redis:alpine
    container_name: redis
    command: ["redis-server", "--requirepass", "Ali1234567"]
    ports:
      - "6379:6379"
    restart: always
    networks:
      - eshopping-external-network
       
  orderdb:
    container_name: orderdb
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      MSSQL_SA_PASSWORD: "Ali1234567"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1433:1433"
    networks:
      - eshopping-external-network

  discountdb:
    image: postgres:latest
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Password@1
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - eshopping-external-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
     test: ["CMD", "rabbitmqctl", "status"]
     interval: 10s
     timeout: 5s
     retries: 3
    networks:
      - eshopping-external-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@eShopping.net
      - PGADMIN_DEFAULT_PASSWORD=Password@1
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
    networks:
      - eshopping-external-network

networks:
  eshopping-external-network:
    external: true

volumes:
  mongo-data: {}
  portainer_data: {}
  postgres_data: {}
  pgadmin_data: {}